@using System.Security.Claims
@using Purchaseproweb.Models
@{
    bool authenticated = false;
    string Userid = "";
    UsermodelResponce currentUserData = null;
    long userType = -1;
    if (User.Identities.Any(u => u.IsAuthenticated))
    {
        authenticated = true;
        currentUserData = Util.GetCurrentUserData(User.Identities);
        if (currentUserData != null)
        {
            userType = currentUserData.Usermodel.Staffid;

        }
        Userid = User.Identities.First(u => u.IsAuthenticated && u.HasClaim(c => c.Type == ClaimTypes.NameIdentifier))
            .FindFirst(ClaimTypes.NameIdentifier).Value;
    }

}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>PURCHASEPRO</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <link href="~/lib/plugins/fontawesome-free/css/all.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-toggle/css/bootstrap2-toggle.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/bs-stepper/css/bs-stepper.min.css" rel="stylesheet" />
    <link href="~/lib/plugins/datatables-bs4/css/datatables.bootstrap4.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
    <link rel="stylesheet" href="~/lib/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
    <link rel="stylesheet" href="~/lib/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">
    <link href="~/dist/css/adminlte.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <style type="text/css">
        textarea {
            resize: none;
        }
    </style>


    @RenderSection("Css", required: false)
</head>
<body class="hold-transition sidebar-mini sidebar-light-white layout-fixed layout-navbar-fixed layout-footer-fixed">
    <div class="wrapper">
        <nav class="main-header navbar navbar-expand navbar-white">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars text-dark"></i></a>
                </li>
            </ul>
            <ul class="order-1 order-md-3 navbar-nav navbar-no-expand ml-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link text-uppercase text-xs text-dark" data-toggle="dropdown" href="#"><i class="fas fa-user-circle text-dark fa-1x img-circle rounded-circle"></i>&nbsp;&nbsp;@currentUserData.Usermodel.Fullname</a>
                    <div class="dropdown-menu">
                        <div class="row" hidden>
                            <div class="col-sm-12">
                                <input id="systemLoggedinedtenantid" value="@currentUserData.Usermodel.Tenantid">
                                <input id="systemLoggedinedUserid" value="@currentUserData.Usermodel.Staffid">
                                <input id="systemLoggedinedUserNameId" value="@currentUserData.Usermodel.Fullname">
                                <input id="systemLoggedinedShortCodeId" value="@currentUserData.Usermodel.Shortcode">
                                <select id="permissionList" asp-items="@currentUserData.Usermodel.Permission.Select(x => new SelectListItem { Text = x.Permissionname }).ToList()"></select>
                            </div>
                        </div>
                       @*  <a asp-area="" asp-controller="AccountManagement" asp-action="Myprofile" class="dropdown-item text-dark text-sm font-weight-bold">My Profile</a> *@
                        <a asp-area="" asp-controller="AccountManagement" asp-action="Logout" class="dropdown-item text-dark text-sm"> Log out</a>
                    </div>
                </li>
            </ul>
        </nav>

        @*@if (authenticated && currentUserData != null)
        {
        @await Component.InvokeAsync("Menu", new { profilecode = currentUserData.ProfileCode })
        }*@

        <aside class="main-sidebar sidebar-light-white position-fixed">
            <a asp-controller="Home" asp-action="Index" class="brand-link bg-white">
                 <img src="/imgs/dukawaremallo.png" alt="DWM" class="brand-image img-circle" style="opacity: .8">
                <span class="brand-text font-weight-bolder text-dark text-uppercase">@currentUserData.Usermodel.Tenantname.ToUpper()</span>
            </a>
            <div class="sidebar">
                <nav class="mt-2">
                    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                        <li class="nav-item">
                            <a asp-controller="Home" asp-action="Index" asp-area="" class="nav-link">
                                <i class="nav-icon fas fa-tachometer-alt"></i><p>Dashboard</p>
                            </a>
                        </li>
                       
                        <li id="CAN_VIEW_SYSTEM_MAINTENANCE" class="nav-item has-treeview main">
                            <a href="javascript: void(0);" class="nav-link">
                                <i class="nav-icon fa fa-wrench"></i><p>Maintenance<i class="fa fa-angle-left right"></i></p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_PERMISSION_LISTS">
                                    <a asp-controller="Maintenance" asp-action="Systempermissionlist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Permissions</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_VEHICLE_MAKE_LISTINGS">
                                    <a asp-controller="Maintenance" asp-action="Systemvehiclemakelist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Vehicle Makes</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_VEHICLE_MODEL_LISTINGS">
                                    <a asp-controller="Maintenance" asp-action="Systemvehiclemodellist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Vehicle Models</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_TENANT_LISTINGS">
                                    <a asp-controller="Maintenance" asp-action="Systemtenantlist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Tenants</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_ASSETS_LISTINGS">
                                    <a asp-controller="Maintenance" asp-action="Systemassetlist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Assets</p>
                                    </a>
                                </li>
                            </ul>
                        </li>


                        <li id="CAN_VIEW_SYSTEM_CUSTOMERS" class="nav-item has-treeview main">
                            <a href="javascript: void(0);" class="nav-link">
                                <i class="nav-icon fa fa-users"></i><p>Customers<i class="fa fa-angle-left right"></i></p>
                            </a>
                            <ul class="nav nav-treeview">
                                <li class="nav-item  ml-2 main" id="CAN_VIEW_SYSTEM_CUSTOMER_LISTINGS">
                                    <a asp-controller="CustomerManagement" asp-action="Customerlist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Customers</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                       
                        <li class="nav-item has-treeview main" id="CAN_VIEW_SYSTEM_STAFFS_AND_ROLES">
                            <a href="javascript: void(0);" class="nav-link">
                                <i class="nav-icon fa fa-users"></i><p>Staff<i class="fa fa-angle-left right"></i></p>
                            </a>
                            <ul class="nav nav-treeview ml-2 main" id="CAN_VIEW_SYSTEM_ROLES_LISTINGS">
                                <li class="nav-item">
                                    <a asp-controller="StaffManagement" asp-action="Rolelist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Role List</p>
                                    </a>
                                </li>
                            </ul>
                            <ul class="nav nav-treeview ml-2 main" id="CAN_VIEW_SYSTEM_STAFFS_LISTINGS">
                                <li class="nav-item">
                                    <a asp-controller="StaffManagement" asp-action="Systemstaffslist" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Staffs List</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                        <li class="nav-item has-treeview main" id="CAN_VIEW_SYSTEM_REPORTS">
                            <a href="javascript: void(0);" class="nav-link">
                                <i class="nav-icon fa fa-file"></i><p>Reports<i class="fa fa-angle-left right"></i></p>
                            </a>
                            <ul class="nav nav-treeview ml-2 main" id="CAN_VIEW_SYSTEM_LOAN_PAYMENT_REPORT">
                                <li class="nav-item">
                                    <a asp-controller="ReportManagement" asp-action="Generatecustomerloanpayment" asp-area="" class="nav-link">
                                        <i class="nav-icon fas fa-list"></i><p>Loan Repayment List</p>
                                    </a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </nav>
            </div>
        </aside>

        <div class="content-wrapper">
            <section class="content">
                <div class="container-fluid text-sm font-weight-light text-dark">
                    <div id="AlertsContainer">
                        @{
                            await Html.RenderPartialAsync("_Alerts");
                        }
                    </div>
                    <main role="main" class="pb-3 mt-2 pt-2">
                        @RenderBody()
                    </main>
                </div>
            </section>
        </div>

        <footer class="main-footer text-center bg-light">
            <p class="text-xs font-weight-normal">&copy; 2020 - @DateTime.Now.Year <a class="text-info" href="https://uttambsolutions.com/" target="_blank">Uttamb Solutions</a>. All rights reserved.</p>
        </footer>
        <div class="modal modal- fade" id="DukawaremallsystemModalExtraLarge" tabindex="-1">
            <div class="modal-dialog modal-xl" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal modal- fade" id="DukawaremallsystemModalLarge" tabindex="-1">
            <div class="modal-dialog modal-lg" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="modal fade" id="DukawaremallsystemModal" tabindex="-1">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                </div>
            </div>
        </div>
        <div class="blockoverlay">
        </div>
    </div>
    <script src="~/lib/plugins/jquery/jquery.min.js"></script>
    <script src="~/lib/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/lib/plugins/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/bootstrap-toggle/js/bootstrap2-toggle.min.js"></script>
    <script src="~/lib/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/js/generalsystemjavascript.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var _perms = document.getElementById("permissionList");
            if (!_perms) {
                window.location.href = '/Account/Signinuser';
            } else {
                var permissionValues = Array.from(_perms.options).map(option => option.value);
                document.querySelectorAll('.main').forEach(function (node) {
                    if (permissionValues.includes(node.id)) {
                        node.style.display = "block";
                    }
                });
            }
        });

        $('.select2').select2();

        $('body').on('shown.bs.modal', '#DukawaremallsystemModalLarge', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


        $('body').on('shown.bs.modal', '#childModal', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });

        $('body').on('shown.bs.modal', '#DukawaremallsystemModalExtraLarge', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


        $('body').on('shown.bs.modal', '#childModal', function () {
            $(this).find('.select2-multiple').each(function () {
                var dropdownParent = $(document.body);
                if ($(this).parents('.modal.in:first').length !== 0)
                    dropdownParent = $(this).parents('.modal.in:first');
                $(this).select2({
                    dropdownParent: dropdownParent,
                    closeOnSelect: false,
                    placeholder: 'Select options',
                    selectAllText: 'Select All',
                    searchPlaceholder: 'Search options',
                    allowClear: true
                });
            });
        });


        function changethebillingcyclebasedontype(billingcyclrtype) {
            if (billingcyclrtype == "Monthly") {
                $('#monthlypostpaidrecurrentbillingdayId').show();
                $('#weeklypostpaidrecurrentbillingdayId').hide();

            } else {
                $('#weeklypostpaidrecurrentbillingdayId').show();
                $('#monthlypostpaidrecurrentbillingdayId').hide();
            }
        }
        function changethebillingamountbasedonbillingbasis(billingbasis) {
            if (billingbasis == "Consumed") {
                $('#postpaidoneoffbillingamountallId').hide();

            } else {
                $('#postpaidoneoffbillingamountallId').show();
            }
        }


        $('#DukawaremallsystemModalExtraLarge').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url);
            $(".blockoverlay").hide();
        });
        $('#DukawaremallsystemModalExtraLarge').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#DukawaremallsystemModalExtraLarge .modal-content').empty();
        });

        $('#DukawaremallsystemModalLarge').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url);
            $(".blockoverlay").hide();
        });
        $('#DukawaremallsystemModalLarge').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#DukawaremallsystemModalLarge .modal-content').empty();
        });

        $('#DukawaremallsystemModal').on('show.bs.modal', function (event) {
            $(".blockoverlay").show();
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);
            modal.find('.modal-content').load(url);
            $(".blockoverlay").hide();
        });
        $('#DukawaremallsystemModal').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
            $('.modal-backdrop').remove();
            $('#DukawaremallsystemModal .modal-content').empty();
        });

         function verifythis(event) {
            Swal.fire({
                title: "Are you sure you want to verify this?",
                text: "Verify",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Verify!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deactivateBtn = event.target;
                    var tableName = deactivateBtn.getAttribute('data-tablename');
                    var columnName = deactivateBtn.getAttribute('data-Columname');
                    var status = deactivateBtn.getAttribute('data-Status');
                    var columnIdName = deactivateBtn.getAttribute('data-Columnidname');
                    var entryId = deactivateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Verified!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Verify once you are sure", "info");
                }
            });
        };

        function approvethis(event) {
            Swal.fire({
                title: "Are you sure you want to approve this?",
                text: "Verify",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Approve!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deactivateBtn = event.target;
                    var tableName = deactivateBtn.getAttribute('data-tablename');
                    var columnName = deactivateBtn.getAttribute('data-Columname');
                    var status = deactivateBtn.getAttribute('data-Status');
                    var columnIdName = deactivateBtn.getAttribute('data-Columnidname');
                    var entryId = deactivateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Approved!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Approve once you are sure", "info");
                }
            });
        };

        function deactivatethis(event) {
            Swal.fire({
                title: "Are you sure you want to deactivate this?",
                text: "Once deactivated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, deactivate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deactivateBtn = event.target;
                    var tableName = deactivateBtn.getAttribute('data-tablename');
                    var columnName = deactivateBtn.getAttribute('data-Columname');
                    var status = deactivateBtn.getAttribute('data-Status');
                    var columnIdName = deactivateBtn.getAttribute('data-Columnidname');
                    var entryId = deactivateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deactivated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Deactivate once you are sure", "info");
                }
            });
        };

        function activatethis(event) {
            Swal.fire({
                title: "Are you sure you want to activate this?",
                text: "Once activated, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, activate it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var activateBtn = event.target;
                    var Tablename = activateBtn.getAttribute('data-Tablename');
                    var Columname = activateBtn.getAttribute('data-Columname');
                    var Status = activateBtn.getAttribute('data-Status');
                    var Columnidname = activateBtn.getAttribute('data-Columnidname');
                    var Entryid = activateBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Activated!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Activate once you are sure", "info");
                }
            });
        };

        function restorethis(event) {
            Swal.fire({
                title: "Are you sure you want to restore this?",
                text: "Once retored, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, restore it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var restoreBtn = event.target;
                    var Tablename = restoreBtn.getAttribute('data-Tablename');
                    var Columname = restoreBtn.getAttribute('data-Columname');
                    var Status = restoreBtn.getAttribute('data-Status');
                    var Columnidname = restoreBtn.getAttribute('data-Columnidname');
                    var Entryid = restoreBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };

                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Restored!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Restore once you are sure", "info");
                }
            });
        };

        function deletethis(event) {
            Swal.fire({
                title: "Are you sure you want to delete this?",
                text: "Once deleted, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var deleteBtn = event.target;
                    var Tablename = deleteBtn.getAttribute('data-Tablename');
                    var Columname = deleteBtn.getAttribute('data-Columname');
                    var Status = deleteBtn.getAttribute('data-Status');
                    var Columnidname = deleteBtn.getAttribute('data-Columnidname');
                    var Entryid = deleteBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Deleted!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Delete once you are sure", "info");
                }
            });
        };

        function rejectthis(event) {
            Swal.fire({
                title: "Are you sure you want to reject this?",
                text: "Once rejected, it will not transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Reject it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var rejectBtn = event.target;
                    var tableName = rejectBtn.getAttribute('data-tablename');
                    var columnName = rejectBtn.getAttribute('data-Columname');
                    var status = rejectBtn.getAttribute('data-Status');
                    var columnIdName = rejectBtn.getAttribute('data-Columnidname');
                    var entryId = rejectBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: tableName, Columname: columnName, Status: status, Columnidname: columnIdName, Entryid: entryId,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Rejected!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }
                    });
                } else {
                    Swal.fire("Thank you!", "Reject once you are sure", "info");
                }
            });
        };

        function approvethis(event) {
            Swal.fire({
                title: "Are you sure you want to Approve this?",
                text: "Approving this, it will transact!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Approve it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var approveBtn = event.target;
                    var Tablename = approveBtn.getAttribute('data-Tablename');
                    var Columname = approveBtn.getAttribute('data-Columname');
                    var Status = approveBtn.getAttribute('data-Status');
                    var Columnidname = approveBtn.getAttribute('data-Columnidname');
                    var Entryid = approveBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columname: Columname, Status: Status, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllDeleteDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            $.post("/CustomerManagement/Createsystemcustomeruser", uil, function (response) {
                                if (response.RespStatus == 0) {
                                    Swal.fire('Customer Approved and email Sent!', 'Good.', 'success')
                                    setTimeout(function () { location.reload(); }, 1000);
                                } else if (response.RespStatus == 1) {
                                    Swal.fire("Oops!", response.RespMessage, "warning");
                                }
                                else {
                                    Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                                }

                            });
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Approve once you are sure", "info");
                }
            });
        };

        function permanentdeletethis(event) {
            Swal.fire({
                title: "Are you sure you want to Remove this?",
                text: "Once Removed, Cannot be Recovered!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var removeBtn = event.target;
                    var Tablename = removeBtn.getAttribute('data-Tablename');
                    var Columnidname = removeBtn.getAttribute('data-Columnidname');
                    var Entryid = removeBtn.getAttribute('data-Entryid');
                    var uil =
                    {
                        Tablename: Tablename, Columnidname: Columnidname, Entryid: Entryid,
                        CreatedbyId: $('#systemLoggedinedUserId').val(), Createdby: $('#systemLoggedinedUserNameId').val(), ModifiedId: $('#systemLoggedinedUserId').val(), Modifiedby: $('#systemLoggedinedUserNameId').val(),
                        Datecreated: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '), Datemodified: new Date(new Date().toString().split('GMT')[0] + ' UTC').toISOString().split('.')[0].replace('T', ' '),
                    };
                    $.post("/CustomerManagement/AllRemoveDeativateActions", uil, function (response) {
                        if (response.RespStatus == 0) {
                            Swal.fire('Item Removed!', 'Good.', 'success')
                            setTimeout(function () { location.reload(); }, 1000);
                        } else if (response.RespStatus == 1) {
                            Swal.fire("Oops!", response.RespMessage, "warning");
                        }
                        else {
                            Swal.fire("Oops! Something Went Wrong", "Database Error has occured. Kindly Contact our support team.", "error");
                        }

                    });
                } else {
                    Swal.fire("Thank you!", "Remove once you are sure", "info");
                }
            });
        };

        // Attach event listener to parent modal's "show.bs.modal" event
        $('#parentModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var url = button.attr("href");
            var modal = $(this);

            // Load the content of the parent modal via AJAX
            $.ajax({
                url: url,
                type: 'GET',
                success: function (result) {
                    modal.find('#parentModalContent').html(result);
                    // Attach event listener to child modal's button to open the child modal
                    modal.find('#childModalButton').on('click', function () {
                        var accountId = $('#customeraccountId').val();
                        var childUrl = '@Url.Action("AddCustomerAccountPolicy", "CustomerManagement")?AccountId=' + accountId;
                        var childModal = $('#childModal');

                        // Load the content of the child modal via AJAX
                        $.ajax({
                            url: childUrl,
                            type: 'GET',
                            success: function (result) {
                                childModal.find('.modal-content').html(result);

                                // Show the child modal on top of the parent modal
                                childModal.modal('show');
                            },
                            error: function () {
                                childModal.find('.modal-content').html('Error loading content.');

                                // Show the child modal on top of the parent modal
                                childModal.modal('show');
                            }
                        });
                    });
                },
                error: function () {
                    modal.find('#parentModalContent').html('Error loading content.');
                }
            });
        });

        $("#AllsystemDataTables").DataTable();
        $("#AllsystemDataTables1").DataTable();
        $("#AllsystemDataTables2").DataTable();
        $("#AllsystemDataTables3").DataTable();
        $("#AllsystemDataTables4").DataTable();

        function dataObject() {
            var t = $('#form_id').serializeArray();
            var paramObj = {};
            $.each(t, function (_, kv) {
                if (paramObj.hasOwnProperty(kv.name)) {
                    paramObj[kv.name] = $.makeArray(paramObj[kv.name]);
                    paramObj[kv.name].push(kv.value);
                }
                else {
                    paramObj[kv.name] = kv.value;
                }
            });

            return paramObj;
        }
        function initViewer(s, e) {

            s.previewModel.reportPreview.showMultipagePreview(true);
        }
    </script>

    @RenderSection("Scripts", required: false)
    <script src="~/dist/js/adminlte.min.js"></script>
</body>
</html>
}